stages:
  - build
  - sonar
  - deploy

cache:
  paths:
    - build
    - node_modules
    - dist
    - coverage

build:
  image: node
  stage: build
  before_script:
    - eval echo \$${CI_COMMIT_REF_NAME}_env > ${CI_COMMIT_REF_NAME}.env && source ${CI_COMMIT_REF_NAME}.env && rm ${CI_COMMIT_REF_NAME}.env
  script:
    - npm install
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then npm run lint; fi
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then npm run test:cov; fi
    - npm run test:e2e
    - npm run build
  only:
    - develop
    - main

deploy:
  image: node
  stage: deploy
  # retry:
  #   max: 1
  #   when:
  #     - always
  variables:
    TERRAFORM_BACKEND_ADDRESS: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/terraform/state/my-terraform-state-${CI_COMMIT_REF_NAME}"
  before_script:
    - eval echo \$${CI_COMMIT_REF_NAME}_env > ${CI_COMMIT_REF_NAME}.env && source ${CI_COMMIT_REF_NAME}.env && rm ${CI_COMMIT_REF_NAME}.env
    - apt-get update && apt-get install -y git unzip wget curl
    - wget https://releases.hashicorp.com/terraform/1.3.0/terraform_1.3.0_linux_amd64.zip && unzip terraform_1.3.0_linux_amd64.zip && mv terraform /usr/local/bin/ && terraform --version 
    - curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yandex-cloud -n && mv /opt/yandex-cloud/bin/yc /usr/local/bin/ && yc -v 
  script:
    - yc config set token ${YANDEX_TOKEN}
    - export YC_TOKEN=$(yc iam create-token)
    - |
      terraform init -backend-config="address=${TERRAFORM_BACKEND_ADDRESS}" \
      -backend-config="lock_address=${TERRAFORM_BACKEND_LOCK_ADDRESS}" \
      -backend-config="unlock_address=${TERRAFORM_BACKEND_UNLOCK_ADDRESS}" \
      -backend-config="username=gitlab-ci-token" \
      -backend-config="password=${CI_JOB_TOKEN}"
    - |
      terraform apply -auto-approve -lock=false \
      -var="yc_service_account_id=${YC_SERVICE_ACCOUNT_ID}" \
      -var="yc_folder_id=${YC_FOLDER_ID}" \
      -var="telegram_token=${TELEGRAM_TOKEN}" \
      -var="gateway_host=${GATEWAY_HOST}" \
      -var="gateway_basic_token=${GATEWAY_BASIC_TOKEN}"
  only:
    - develop
    - main

sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: sonar
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  script: 
    - eval echo \$${CI_COMMIT_REF_NAME}_env > ${CI_COMMIT_REF_NAME}.env && source ${CI_COMMIT_REF_NAME}.env && rm ${CI_COMMIT_REF_NAME}.env
    - sonar-scanner
  allow_failure: true
  only:
    - develop
